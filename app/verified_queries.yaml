verified_queries:
- name: Top Performing Agencies by Premium
  query_explanation: This query calculates the total premium amount generated by each agency. It joins the agencies, agents, and policies tables to aggregate premium amounts for active policies, then sorts them by total premium in descending order.
  question: Which agencies generate the most premium?
  sql: |
    SELECT 
      a.agency_id,
      a.agency_name,
      a.region,
      a.tier,
      SUM(p.premium_amount) AS total_premium
    FROM 
      agencies a
      JOIN agents ag ON a.agency_id = ag.agency_id
      JOIN policies p ON ag.agent_id = p.agent_id
    WHERE 
      p.status = 'active' -- active, lapsed, cancelled
    GROUP BY 
      a.agency_id, a.agency_name, a.region, a.tier
    ORDER BY 
      total_premium DESC
    LIMIT 10;
  tables_used:
  - agencies
  - agents
  - policies
  verified_at: 15 April 2025
  verified_by: data_analyst

- name: Distribution Channel Performance Analysis
  query_explanation: This query analyzes the performance of different distribution channels by measuring total premium, policy count, and average premium per policy for each channel. Only active policies are included, and the results are ordered by total premium.
  question: How are our different distribution channels performing?
  sql: |
    SELECT 
      dc.channel_id,
      dc.channel_name,
      dc.channel_type,
      COUNT(p.policy_id) AS policy_count,
      SUM(p.premium_amount) AS total_premium,
      AVG(p.premium_amount) AS avg_premium_per_policy,
      SUM(p.premium_amount * dc.commission_rate / 100) AS estimated_commission
    FROM 
      distribution_channels dc
      JOIN policies p ON dc.channel_id = p.channel_id
    WHERE 
      p.status = 'active' -- active, lapsed, cancelled
    GROUP BY 
      dc.channel_id, dc.channel_name, dc.channel_type
    ORDER BY 
      total_premium DESC;
  tables_used:
  - distribution_channels
  - policies
  verified_at: 15 April 2025
  verified_by: data_analyst

- name: Agent Performance Report
  query_explanation: This query provides a performance report for agents, including their agency, certification level, number of policies sold, total premium, and revenue impact. It only includes active agents and their active policies.
  question: How are our agents performing in terms of sales?
  sql: |
    SELECT 
      ag.agent_id,
      ag.agent_name,
      a.agency_name,
      ag.certification_level,
      COUNT(p.policy_id) AS policies_sold,
      SUM(p.premium_amount) AS total_premium,
      SUM(p.annual_revenue_impact) AS total_revenue_impact
    FROM 
      agents ag
      JOIN agencies a ON ag.agency_id = a.agency_id
      JOIN policies p ON ag.agent_id = p.agent_id
    WHERE 
      ag.status = 'active' -- active, inactive
      AND p.status = 'active' -- active, lapsed, cancelled
    GROUP BY 
      ag.agent_id, ag.agent_name, a.agency_name, ag.certification_level
    ORDER BY 
      total_premium DESC;
  tables_used:
  - agents
  - agencies
  - policies
  verified_at: 15 April 2025
  verified_by: data_analyst

- name: Claims Analysis by Policy Type
  query_explanation: This query analyzes claims data grouped by policy type, showing total claim amount, average claim amount, claim frequency, and loss ratio. The loss ratio is calculated as (total claim amount / total premium) for each policy type.
  question: What are our loss ratios by policy type?
  sql: |
    SELECT 
      p.policy_type,
      COUNT(p.policy_id) AS policy_count,
      SUM(p.premium_amount) AS total_premium,
      COUNT(c.claim_id) AS claim_count,
      SUM(c.claim_amount) AS total_claim_amount,
      AVG(c.claim_amount) AS avg_claim_amount,
      COUNT(c.claim_id)::float / COUNT(p.policy_id) AS claim_frequency,
      CASE 
        WHEN SUM(p.premium_amount) > 0 THEN 
          SUM(c.claim_amount) / SUM(p.premium_amount) * 100
        ELSE 0
      END AS loss_ratio_percent
    FROM 
      policies p
      LEFT JOIN claims c ON p.policy_id = c.policy_id
    WHERE 
      p.status = 'active' -- active, lapsed, cancelled
    GROUP BY 
      p.policy_type
    ORDER BY 
      loss_ratio_percent DESC;
  tables_used:
  - policies
  - claims
  verified_at: 15 April 2025
  verified_by: data_analyst

- name: Regional Agency Performance
  query_explanation: This query analyzes agency performance by region, showing the number of agencies, average premium per agency, total premium, and policy count for each region. The results are sorted by total premium in descending order.
  question: How are our agencies performing by region?
  sql: |
    SELECT 
      a.region,
      COUNT(DISTINCT a.agency_id) AS agency_count,
      SUM(p.premium_amount) AS total_premium,
      SUM(p.premium_amount) / COUNT(DISTINCT a.agency_id) AS avg_premium_per_agency,
      COUNT(p.policy_id) AS policy_count
    FROM 
      agencies a
      JOIN agents ag ON a.agency_id = ag.agency_id
      JOIN policies p ON ag.agent_id = p.agent_id
    WHERE 
      p.status = 'active' -- active, lapsed, cancelled
    GROUP BY 
      a.region
    ORDER BY 
      total_premium DESC;
  tables_used:
  - agencies
  - agents
  - policies
  verified_at: 15 April 2025
  verified_by: data_analyst