[
    {
      "id": "enhance_question",
      "name": "Enhance Question",
      "description": "Enhances a user question to make it more specific and clear, using context if available",
      "system_prompt": "You are an expert in P&C Insurance data analysis.\nYour task is to enhance user questions to make them more specific and clear.",
      "user_prompt": "You are helping clarify and enhance user questions for insurance data analysis. Your goal is to make them more specific and clear.\n\nBelow is a user question the user wants answered using data. Use the rules below to enhance it.\n\nUser Question:\n{question}\n\nEnhancement Rules:\n\nRULE #1: Use the calendar context below ONLY if the original question makes reference to it (e.g., \"this year\", \"last 2 quarters\", etc). DO NOT assume or add time period, unless clearly implied by the original question.\nCalendar Context: {context.get('calendar_context', 'None')}\n\nRULE #2: Use the user profile context below ONLY if the original question makes reference to it (e.g., \"my region\", \"my agency\", etc). DO NOT use user profile information unless clearly implied by the original question.\nUser Profile: {context.get('user_profile', 'None')}\n\nRULE #3: If the question is general, keep it general. If no enhancement is needed, return the original question as is.\n\nRULE #4: Preserve the intent, structure, and tone of the original question.\n\nRULE #5: Return only the enhanced question with no extra commentary.\n\nIf your response does not pass the above rules, please rephrase it to comply with the rules.\n\nExamples:\n- Input: \"What is the total premium generated by each agency?\" → Output: \"What is the total premium generated by each agency?\"\n- Input: \"What is the total premium generated by each agency in my region this year?\" (with Region: Northeast) → Output: \"What is the total premium generated by each agency in the Northeast region during the current year (2025)?\"",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "question",
          "description": "The original user question to enhance",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "context",
          "description": "Dictionary containing calendar context and user profile information",
          "default_value": "{}",
          "required": true
        }
      ]
    },
    {
      "id": "generate_intent_clarifications",
      "name": "Generate Intent Clarifications",
      "description": "Generates multiple intent clarifications for an ambiguous user question",
      "system_prompt": "You are an expert in P&C Insurance data analysis.\nYour task is to generate clear variations of the user's question to ensure correct intent interpretation.",
      "user_prompt": "Below is a user question related to insurance data analysis. Generate 3-4 different interpretations or clarifications\nof this question. These should represent slightly different ways to understand what the user might be asking.\n\nOriginal Question: \"{question}\"\n\nUse the context below only if directly relevant to resolving ambiguities:\nCalendar Context: {context.get('calendar_context', 'None')}\nUser Profile: {context.get('user_profile', 'None')}\n\nRules:\n1. Each variation should be a plausible interpretation of the original intent\n2. Include the original question as one of the options\n3. Variations might differ in:\n   - Time periods referenced (current quarter, year-to-date, previous quarter, etc.) or no time period\n   - Categorical value filters applied based on User Profile (specific items, all items, omitting the filter altogether, etc.)\n   - Metric focus (totals, counts, averages, etc.)\n   - Grouping/filtering level \n4. Each variation should be a complete, well-formed question\n5. Don't make interpretations that completely change the user's intent\n\nReturn a JSON array with each item containing:\n- \"text\": the clarified question text\n- \"explanation\": a brief, one-sentence explanation of this interpretation\n\nThe first option should always be the original question with an explanation.",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "question",
          "description": "The original user question that needs clarification",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "context",
          "description": "Dictionary containing calendar context and user profile information",
          "default_value": "{}",
          "required": true 
        }
      ]
    },
    {
      "id": "get_best_query",
      "name": "Get Best Query",
      "description": "Selects the best verified query from candidates based on semantic matching",
      "system_prompt": "You are an expert at matching user questions with verified SQL queries.\nYour task is to analyze the user's question and select the most appropriate verified query from candidates.",
      "user_prompt": "User Question: {question}\n\nCandidate verified queries along with their explanations and question answered by the query:\n{candidates_str}\n\nBased on the user's question, select the most appropriate verified query.\nAnalyze the semantic meaning of the question, not just keyword matching.\nReturn a JSON with these fields:\n- \"best_match_index\": integer with the index of the best matching candidate (1-based)\n- \"confidence\": float between 0 and 1 indicating your confidence in the match\n- \"reasoning\": string explaining why this is the best match",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "question",
          "description": "The user's question to match against verified queries",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "candidates_str",
          "description": "String representation of candidate queries with their details",
          "default_value": null,
          "required": true
        }
      ]
    },
    {
      "id": "get_query_recommendations",
      "name": "Get Query Recommendations",
      "description": "Analyzes a verified SQL query and recommends modifications to tailor it to a specific question",
      "system_prompt": "You are an expert SQL developer for PostgreSQL. \nYour task is to analyze a verified SQL query and provide recommendations for tailoring it to the user's specific needs.",
      "user_prompt": "SQL:\n{verified_query.sql}\n\nExplanation:\n{verified_query.query_explanation}\n\nThis SQL query is designed to answer the following questions:\n{json.dumps(question_texts, indent=2)}\n\nTailoring documentation for the SQL:\n{verified_query.instructions}\n\nUser question that the SQL must me tailored to answer: {question}\n\nBased on the SQL and the user's question, provide specific recommendations for tailoring the SQL query.\nFollow the tailoring documentation and identify exactly what changes need to be made.\n\nRules for writing recommendations:\n- DO NOT assume table names or columns that are not in the SQL or in the documentation.\n- DO NOT recommend joining additional tables unless explicitly mentioned in the SQL or documentation.\n- DO NOT recommend adding new columns unless explicitly mentioned in the SQL or documentation.\n- DO NOT add predicates with placeholders unresolved.\n\nReturn a JSON with these fields:\n- \"modifications_needed\": boolean indicating if modifications are needed\n- \"modifications\": list of specific modifications to make, with each item containing:\n- \"type\": modification type (e.g., \"filter\", \"column\", \"grouping\", \"sorting\")\n- \"description\": detailed description of the change\n- \"sql_impact\": how it affects the SQL query\n- \"explanation\": explanation of why these modifications are recommended",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "verified_query",
          "description": "The verified query object to analyze",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "question",
          "description": "The user question that the query needs to be tailored for",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "question_texts",
          "description": "List of questions that the query is designed to answer",
          "default_value": "[]",
          "required": true
        }
      ]
    },
    {
      "id": "modify_query",
      "name": "Modify Query",
      "description": "Modifies a SQL query based on specific modification instructions",
      "system_prompt": "You are an expert SQL developer for PostgreSQL. \nYour task is to analyze and modify SQL based on specific requirements. \nYour response will be a valid SQL query.",
      "user_prompt": "Original SQL:\n{sql}\n\nModification instructions:\n{modifications}\n\nColumn Alias Guidelines:\n- Change only if necessary\n- Match the verb from user's question\n- Keep prefixes if present\n- Maintain quote style and capitalization\n\nReturn only the modified SQL query. Do NOT include any other text or explanations.",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "sql",
          "description": "The original SQL query to modify",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "modifications",
          "description": "List of modifications to apply to the SQL query",
          "default_value": null,
          "required": true
        }
      ]
    },
    {
      "id": "review_modified_query",
      "name": "Review Modified Query",
      "description": "Reviews a modified SQL query for correctness, alignment with user intent, and potential issues",
      "system_prompt": "You are an expert SQL reviewer for PostgreSQL. \nYour task is to analyze a modified SQL query for correctness and alignment with user intent.",
      "user_prompt": "Please review this modified SQL query for correctness, SQL syntax, and alignment with the user's question.\n\nOriginal SQL Query:\n```sql\n{original_sql}\n```\n\nModified SQL Query:\n```sql\n{modified_sql}\n```\n\nOriginal User Question: {original_question}\n\nEnhanced User Question: {enhanced_question}\n\nSQL Query Explanation:\n{verified_query.query_explanation}\n\nSQL Modification Instructions:\n{verified_query.instructions}\n\nTables Used: {', '.join(verified_query.tables_used)}\n\nPlease analyze the modified SQL query and identify any:\n1. SQL syntax errors or logical errors\n2. Hallucinated table or column names not mentioned in the original SQL or modification instructions\n3. Misalignment with the user's question intent\n4. Poor SQL practices or performance issues\n5. Missing filters, grouping, or sorting needed to properly answer the question\n\nReturn a JSON with these fields:\n- \"is_valid\": boolean indicating if the query is valid and ready to run\n- \"issues\": array of identified issues (empty if none found)\n- \"suggestions\": array of suggested improvements (empty if none needed)\n- \"explanation\": string with brief explanation of your findings\n- \"corrected_sql\": string with corrected SQL only if improvements are needed (otherwise null)",
      "verbose_flag": true,
      "parameters": [
        {
          "param_name": "original_sql",
          "description": "The original SQL query before modifications",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "modified_sql",
          "description": "The modified SQL query to review",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "original_question",
          "description": "The original user question",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "enhanced_question",
          "description": "The enhanced/clarified question",
          "default_value": null,
          "required": true
        },
        {
          "param_name": "verified_query",
          "description": "The VerifiedQuery object containing metadata",
          "default_value": null,
          "required": true
        }
      ]
    }
  ]